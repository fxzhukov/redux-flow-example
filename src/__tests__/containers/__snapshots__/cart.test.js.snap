// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cart renders without crashing 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Connect(Cart)
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Connect {
      "__reactInternalMemoizedMaskedChildContext": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedMergedChildContext": Object {
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedUnmaskedChildContext": Object {},
      "_reactInternalFiber": FiberNode {
        "_debugID": 4,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="flexBlock appHeader"
                                    >
                                                      <h2>
                                                                        My cool cart
                                                      </h2>
                                                      <div>
                                                                        <button
                                                                                          class="generateCart"
                                                                        >
                                                                                          Generate random cart content
                                                                        </button>
                                                                        <button
                                                                                          class="addItem"
                                                                        >
                                                                                          + Add item
                                                                        </button>
                                                      </div>
                                    </div>
                                    <table
                                                      width="100%"
                                    >
                                                      <thead>
                                                                        <tr>
                                                                                          <th>
                                                                                                            #
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Product Name
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Price
                                                                                          </th>
                                                                                          <th
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Amount
                                                                                          </th>
                                                                                          <th>
                                                                                                            Delete item
                                                                                          </th>
                                                                        </tr>
                                                      </thead>
                                                      <tbody />
                                                      <tfoot>
                                                                        <tr>
                                                                                          <td
                                                                                                            colspan="2"
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              Total:
                                                                                                            </strong>
                                                                                          </td>
                                                                                          <td
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              $ 0
                                                                                                            </strong>
                                                                                          </td>
                                                                        </tr>
                                                      </tfoot>
                                    </table>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "store": Object {
                                                                    "clearActions": [Function],
                                                                    "dispatch": [Function],
                                                                    "getActions": [Function],
                                                                    "getState": [Function],
                                                                    "replaceReducer": [Function],
                                                                    "subscribe": [Function],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "store": Object {
                                                                    "clearActions": [Function],
                                                                    "dispatch": [Function],
                                                                    "getActions": [Function],
                                                                    "getState": [Function],
                                                                    "replaceReducer": [Function],
                                                                    "subscribe": [Function],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                class="flexBlock appHeader"
                                >
                                                <h2>
                                                                My cool cart
                                                </h2>
                                                <div>
                                                                <button
                                                                                class="generateCart"
                                                                >
                                                                                Generate random cart content
                                                                </button>
                                                                <button
                                                                                class="addItem"
                                                                >
                                                                                + Add item
                                                                </button>
                                                </div>
                                </div>
                                <table
                                                width="100%"
                                >
                                                <thead>
                                                                <tr>
                                                                                <th>
                                                                                                #
                                                                                </th>
                                                                                <th
                                                                                                align="right"
                                                                                                class="sortBy "
                                                                                >
                                                                                                Product Name
                                                                                </th>
                                                                                <th
                                                                                                align="right"
                                                                                                class="sortBy "
                                                                                >
                                                                                                Price
                                                                                </th>
                                                                                <th
                                                                                                class="sortBy "
                                                                                >
                                                                                                Amount
                                                                                </th>
                                                                                <th>
                                                                                                Delete item
                                                                                </th>
                                                                </tr>
                                                </thead>
                                                <tbody />
                                                <tfoot>
                                                                <tr>
                                                                                <td
                                                                                                colspan="2"
                                                                                                align="right"
                                                                                >
                                                                                                <strong>
                                                                                                                Total:
                                                                                                </strong>
                                                                                </td>
                                                                                <td
                                                                                                align="right"
                                                                                >
                                                                                                <strong>
                                                                                                                $ 0
                                                                                                </strong>
                                                                                </td>
                                                                </tr>
                                                </tfoot>
                                </table>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
              "lineNumber": 43,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                "lineNumber": 44,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                  "lineNumber": 45,
                },
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "My cool cart",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                    "lineNumber": 46,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 11,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                      "lineNumber": 47,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Generate random cart content",
                      "className": "generateCart",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 12,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 50,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "+ Add item",
                        "className": "addItem",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <button
                        class="addItem"
>
                        + Add item
</button>,
                      "tag": 5,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "stateNode": <button
                      class="generateCart"
>
                      Generate random cart content
</button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <button
                        className="generateCart"
                        onClick={[Function]}
>
                        Generate random cart content
</button>,
                      <button
                        className="addItem"
                        onClick={[Function]}
>
                        + Add item
</button>,
                    ],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <div>
                    <button
                                        class="generateCart"
                    >
                                        Generate random cart content
                    </button>
                    <button
                                        class="addItem"
                    >
                                        + Add item
                    </button>
</div>,
                  "tag": 5,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <h2>
                  My cool cart
</h2>,
                "tag": 5,
                "type": "h2",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h2>
                    My cool cart
</h2>,
                  <div>
                    <button
                                        className="generateCart"
                                        onClick={[Function]}
                    >
                                        Generate random cart content
                    </button>
                    <button
                                        className="addItem"
                                        onClick={[Function]}
                    >
                                        + Add item
                    </button>
</div>,
                ],
                "className": "flexBlock appHeader",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                  "lineNumber": 55,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                    "lineNumber": 56,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                      "lineNumber": 57,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 17,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 58,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "#",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 18,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                          "lineNumber": 59,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "align": "right",
                          "children": "Product Name",
                          "className": "sortBy ",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 19,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                            "lineNumber": 70,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "align": "right",
                            "children": "Price",
                            "className": "sortBy ",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 20,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                              "lineNumber": 81,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 3,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Amount",
                              "className": "sortBy ",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                "lineNumber": 91,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 4,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Delete item",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <th>
                                Delete item
</th>,
                              "tag": 5,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              class="sortBy "
>
                              Amount
</th>,
                            "tag": 5,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th
                            align="right"
                            class="sortBy "
>
                            Price
</th>,
                          "tag": 5,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "stateNode": <th
                          align="right"
                          class="sortBy "
>
                          Product Name
</th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "stateNode": <th>
                        #
</th>,
                      "tag": 5,
                      "type": "th",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <th>
                          #
</th>,
                        <th
                          align="right"
                          className="sortBy "
                          onClick={[Function]}
>
                          Product Name
</th>,
                        <th
                          align="right"
                          className="sortBy "
                          onClick={[Function]}
>
                          Price
</th>,
                        <th
                          className="sortBy "
                          onClick={[Function]}
>
                          Amount
</th>,
                        <th>
                          Delete item
</th>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <tr>
                      <th>
                                            #
                      </th>
                      <th
                                            align="right"
                                            class="sortBy "
                      >
                                            Product Name
                      </th>
                      <th
                                            align="right"
                                            class="sortBy "
                      >
                                            Price
                      </th>
                      <th
                                            class="sortBy "
                      >
                                            Amount
                      </th>
                      <th>
                                            Delete item
                      </th>
</tr>,
                    "tag": 5,
                    "type": "tr",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <tr>
                      <th>
                                            #
                      </th>
                      <th
                                            align="right"
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Product Name
                      </th>
                      <th
                                            align="right"
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Price
                      </th>
                      <th
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Amount
                      </th>
                      <th>
                                            Delete item
                      </th>
</tr>,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 14,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                      "lineNumber": 94,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 15,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 105,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 22,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                          "lineNumber": 106,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 23,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                            "lineNumber": 107,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 25,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                              "lineNumber": 108,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Total:",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <strong>
                              Total:
</strong>,
                            "tag": 5,
                            "type": "strong",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "align": "right",
                            "children": <strong>
                              Total:
</strong>,
                            "colSpan": 2,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 24,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                              "lineNumber": 110,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 26,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                "lineNumber": 111,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "$ 0",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <strong>
                                $ 0
</strong>,
                              "tag": 5,
                              "type": "strong",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "align": "right",
                              "children": <strong>
                                $ 0
</strong>,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <td
                              align="right"
>
                              <strong>
                                                            $ 0
                              </strong>
</td>,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "stateNode": <td
                            colspan="2"
                            align="right"
>
                            <strong>
                                                        Total:
                            </strong>
</td>,
                          "tag": 5,
                          "type": "td",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <td
                              align="right"
                              colSpan={2}
>
                              <strong>
                                                            Total:
                              </strong>
</td>,
                            <td
                              align="right"
>
                              <strong>
                                                            $ 0
                              </strong>
</td>,
                          ],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <tr>
                          <td
                                                    colspan="2"
                                                    align="right"
                          >
                                                    <strong>
                                                                              Total:
                                                    </strong>
                          </td>
                          <td
                                                    align="right"
                          >
                                                    <strong>
                                                                              $ 0
                                                    </strong>
                          </td>
</tr>,
                        "tag": 5,
                        "type": "tr",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <tr>
                          <td
                                                    align="right"
                                                    colSpan={2}
                          >
                                                    <strong>
                                                                              Total:
                                                    </strong>
                          </td>
                          <td
                                                    align="right"
                          >
                                                    <strong>
                                                                              $ 0
                                                    </strong>
                          </td>
</tr>,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <tfoot>
                        <tr>
                                                <td
                                                                        colspan="2"
                                                                        align="right"
                                                >
                                                                        <strong>
                                                                                                Total:
                                                                        </strong>
                                                </td>
                                                <td
                                                                        align="right"
                                                >
                                                                        <strong>
                                                                                                $ 0
                                                                        </strong>
                                                </td>
                        </tr>
</tfoot>,
                      "tag": 5,
                      "type": "tfoot",
                      "updateQueue": null,
                    },
                    "stateNode": <tbody />,
                    "tag": 5,
                    "type": "tbody",
                    "updateQueue": null,
                  },
                  "stateNode": <thead>
                    <tr>
                                        <th>
                                                            #
                                        </th>
                                        <th
                                                            align="right"
                                                            class="sortBy "
                                        >
                                                            Product Name
                                        </th>
                                        <th
                                                            align="right"
                                                            class="sortBy "
                                        >
                                                            Price
                                        </th>
                                        <th
                                                            class="sortBy "
                                        >
                                                            Amount
                                        </th>
                                        <th>
                                                            Delete item
                                        </th>
                    </tr>
</thead>,
                  "tag": 5,
                  "type": "thead",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <thead>
                      <tr>
                                            <th>
                                                                  #
                                            </th>
                                            <th
                                                                  align="right"
                                                                  className="sortBy "
                                                                  onClick={[Function]}
                                            >
                                                                  Product Name
                                            </th>
                                            <th
                                                                  align="right"
                                                                  className="sortBy "
                                                                  onClick={[Function]}
                                            >
                                                                  Price
                                            </th>
                                            <th
                                                                  className="sortBy "
                                                                  onClick={[Function]}
                                            >
                                                                  Amount
                                            </th>
                                            <th>
                                                                  Delete item
                                            </th>
                      </tr>
</thead>,
                    <tbody>
                      
</tbody>,
                    <tfoot>
                      <tr>
                                            <td
                                                                  align="right"
                                                                  colSpan={2}
                                            >
                                                                  <strong>
                                                                                        Total:
                                                                  </strong>
                                            </td>
                                            <td
                                                                  align="right"
                                            >
                                                                  <strong>
                                                                                        $ 0
                                                                  </strong>
                                            </td>
                      </tr>
</tfoot>,
                  ],
                  "width": "100%",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <table
                  width="100%"
>
                  <thead>
                                    <tr>
                                                      <th>
                                                                        #
                                                      </th>
                                                      <th
                                                                        align="right"
                                                                        class="sortBy "
                                                      >
                                                                        Product Name
                                                      </th>
                                                      <th
                                                                        align="right"
                                                                        class="sortBy "
                                                      >
                                                                        Price
                                                      </th>
                                                      <th
                                                                        class="sortBy "
                                                      >
                                                                        Amount
                                                      </th>
                                                      <th>
                                                                        Delete item
                                                      </th>
                                    </tr>
                  </thead>
                  <tbody />
                  <tfoot>
                                    <tr>
                                                      <td
                                                                        colspan="2"
                                                                        align="right"
                                                      >
                                                                        <strong>
                                                                                          Total:
                                                                        </strong>
                                                      </td>
                                                      <td
                                                                        align="right"
                                                      >
                                                                        <strong>
                                                                                          $ 0
                                                                        </strong>
                                                      </td>
                                    </tr>
                  </tfoot>
</table>,
                "tag": 5,
                "type": "table",
                "updateQueue": null,
              },
              "stateNode": <div
                class="flexBlock appHeader"
>
                <h2>
                                My cool cart
                </h2>
                <div>
                                <button
                                                class="generateCart"
                                >
                                                Generate random cart content
                                </button>
                                <button
                                                class="addItem"
                                >
                                                + Add item
                                </button>
                </div>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <div
                  className="flexBlock appHeader"
>
                  <h2>
                                    My cool cart
                  </h2>
                  <div>
                                    <button
                                                      className="generateCart"
                                                      onClick={[Function]}
                                    >
                                                      Generate random cart content
                                    </button>
                                    <button
                                                      className="addItem"
                                                      onClick={[Function]}
                                    >
                                                      + Add item
                                    </button>
                  </div>
</div>,
                <table
                  width="100%"
>
                  <thead>
                                    <tr>
                                                      <th>
                                                                        #
                                                      </th>
                                                      <th
                                                                        align="right"
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                      >
                                                                        Product Name
                                                      </th>
                                                      <th
                                                                        align="right"
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                      >
                                                                        Price
                                                      </th>
                                                      <th
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                      >
                                                                        Amount
                                                      </th>
                                                      <th>
                                                                        Delete item
                                                      </th>
                                    </tr>
                  </thead>
                  <tbody>
                                    
                  </tbody>
                  <tfoot>
                                    <tr>
                                                      <td
                                                                        align="right"
                                                                        colSpan={2}
                                                      >
                                                                        <strong>
                                                                                          Total:
                                                                        </strong>
                                                      </td>
                                                      <td
                                                                        align="right"
                                                      >
                                                                        <strong>
                                                                                          $ 0
                                                                        </strong>
                                                      </td>
                                    </tr>
                  </tfoot>
</table>,
              ],
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": <div>
              <div
                            class="flexBlock appHeader"
              >
                            <h2>
                                          My cool cart
                            </h2>
                            <div>
                                          <button
                                                        class="generateCart"
                                          >
                                                        Generate random cart content
                                          </button>
                                          <button
                                                        class="addItem"
                                          >
                                                        + Add item
                                          </button>
                            </div>
              </div>
              <table
                            width="100%"
              >
                            <thead>
                                          <tr>
                                                        <th>
                                                                      #
                                                        </th>
                                                        <th
                                                                      align="right"
                                                                      class="sortBy "
                                                        >
                                                                      Product Name
                                                        </th>
                                                        <th
                                                                      align="right"
                                                                      class="sortBy "
                                                        >
                                                                      Price
                                                        </th>
                                                        <th
                                                                      class="sortBy "
                                                        >
                                                                      Amount
                                                        </th>
                                                        <th>
                                                                      Delete item
                                                        </th>
                                          </tr>
                            </thead>
                            <tbody />
                            <tfoot>
                                          <tr>
                                                        <td
                                                                      colspan="2"
                                                                      align="right"
                                                        >
                                                                      <strong>
                                                                                    Total:
                                                                      </strong>
                                                        </td>
                                                        <td
                                                                      align="right"
                                                        >
                                                                      <strong>
                                                                                    $ 0
                                                                      </strong>
                                                        </td>
                                          </tr>
                            </tfoot>
              </table>
</div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "addItem": [Function],
            "changeAmount": [Function],
            "fillCart": [Function],
            "items": Array [],
            "removeItem": [Function],
            "sortColumn": undefined,
            "sortDirection": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "storeSubscription": Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
            "toggleSorting": [Function],
            "total": 0,
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": null,
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "memoizedState": Object {},
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": FiberNode {
          "_debugID": 3,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
            },
          },
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="flexBlock appHeader"
                                    >
                                                      <h2>
                                                                        My cool cart
                                                      </h2>
                                                      <div>
                                                                        <button
                                                                                          class="generateCart"
                                                                        >
                                                                                          Generate random cart content
                                                                        </button>
                                                                        <button
                                                                                          class="addItem"
                                                                        >
                                                                                          + Add item
                                                                        </button>
                                                      </div>
                                    </div>
                                    <table
                                                      width="100%"
                                    >
                                                      <thead>
                                                                        <tr>
                                                                                          <th>
                                                                                                            #
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Product Name
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Price
                                                                                          </th>
                                                                                          <th
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Amount
                                                                                          </th>
                                                                                          <th>
                                                                                                            Delete item
                                                                                          </th>
                                                                        </tr>
                                                      </thead>
                                                      <tbody />
                                                      <tfoot>
                                                                        <tr>
                                                                                          <td
                                                                                                            colspan="2"
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              Total:
                                                                                                            </strong>
                                                                                          </td>
                                                                                          <td
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              $ 0
                                                                                                            </strong>
                                                                                          </td>
                                                                        </tr>
                                                      </tfoot>
                                    </table>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "store": Object {
                                                                    "clearActions": [Function],
                                                                    "dispatch": [Function],
                                                                    "getActions": [Function],
                                                                    "getState": [Function],
                                                                    "replaceReducer": [Function],
                                                                    "subscribe": [Function],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "nextCallback": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "store": Object {
                                                                    "clearActions": [Function],
                                                                    "dispatch": [Function],
                                                                    "getActions": [Function],
                                                                    "getState": [Function],
                                                                    "replaceReducer": [Function],
                                                                    "subscribe": [Function],
                                                                  },
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                              }
                }
/>,
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                                <div
                                                class="flexBlock appHeader"
                                >
                                                <h2>
                                                                My cool cart
                                                </h2>
                                                <div>
                                                                <button
                                                                                class="generateCart"
                                                                >
                                                                                Generate random cart content
                                                                </button>
                                                                <button
                                                                                class="addItem"
                                                                >
                                                                                + Add item
                                                                </button>
                                                </div>
                                </div>
                                <table
                                                width="100%"
                                >
                                                <thead>
                                                                <tr>
                                                                                <th>
                                                                                                #
                                                                                </th>
                                                                                <th
                                                                                                align="right"
                                                                                                class="sortBy "
                                                                                >
                                                                                                Product Name
                                                                                </th>
                                                                                <th
                                                                                                align="right"
                                                                                                class="sortBy "
                                                                                >
                                                                                                Price
                                                                                </th>
                                                                                <th
                                                                                                class="sortBy "
                                                                                >
                                                                                                Amount
                                                                                </th>
                                                                                <th>
                                                                                                Delete item
                                                                                </th>
                                                                </tr>
                                                </thead>
                                                <tbody />
                                                <tfoot>
                                                                <tr>
                                                                                <td
                                                                                                colspan="2"
                                                                                                align="right"
                                                                                >
                                                                                                <strong>
                                                                                                                Total:
                                                                                                </strong>
                                                                                </td>
                                                                                <td
                                                                                                align="right"
                                                                                >
                                                                                                <strong>
                                                                                                                $ 0
                                                                                                </strong>
                                                                                </td>
                                                                </tr>
                                                </tfoot>
                                </table>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "hydrate": false,
              "isReadyForCommit": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "notifyNestedSubs": [Function],
      "props": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "propsMode": true,
      "refs": Object {},
      "renderCount": 0,
      "selector": Object {
        "error": null,
        "props": Object {
          "addItem": [Function],
          "changeAmount": [Function],
          "fillCart": [Function],
          "items": Array [],
          "removeItem": [Function],
          "sortColumn": undefined,
          "sortDirection": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "toggleSorting": [Function],
          "total": 0,
        },
        "run": [Function],
        "shouldComponentUpdate": false,
      },
      "setWrappedInstance": [Function],
      "state": Object {},
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
      "version": 0,
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "addItem": [Function],
        "changeAmount": [Function],
        "fillCart": [Function],
        "items": Array [],
        "removeItem": [Function],
        "sortColumn": undefined,
        "sortDirection": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "toggleSorting": [Function],
        "total": 0,
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <div
                    class="flexBlock appHeader"
          >
                    <h2>
                              My cool cart
                    </h2>
                    <div>
                              <button
                                        class="generateCart"
                              >
                                        Generate random cart content
                              </button>
                              <button
                                        class="addItem"
                              >
                                        + Add item
                              </button>
                    </div>
          </div>
          <table
                    width="100%"
          >
                    <thead>
                              <tr>
                                        <th>
                                                  #
                                        </th>
                                        <th
                                                  align="right"
                                                  class="sortBy "
                                        >
                                                  Product Name
                                        </th>
                                        <th
                                                  align="right"
                                                  class="sortBy "
                                        >
                                                  Price
                                        </th>
                                        <th
                                                  class="sortBy "
                                        >
                                                  Amount
                                        </th>
                                        <th>
                                                  Delete item
                                        </th>
                              </tr>
                    </thead>
                    <tbody />
                    <tfoot>
                              <tr>
                                        <td
                                                  colspan="2"
                                                  align="right"
                                        >
                                                  <strong>
                                                            Total:
                                                  </strong>
                                        </td>
                                        <td
                                                  align="right"
                                        >
                                                  <strong>
                                                            $ 0
                                                  </strong>
                                        </td>
                              </tr>
                    </tfoot>
          </table>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="flexBlock appHeader"
>
              <h2>
                            My cool cart
              </h2>
              <div>
                            <button
                                          className="generateCart"
                                          onClick={[Function]}
                            >
                                          Generate random cart content
                            </button>
                            <button
                                          className="addItem"
                                          onClick={[Function]}
                            >
                                          + Add item
                            </button>
              </div>
</div>,
            <table
              width="100%"
>
              <thead>
                            <tr>
                                          <th>
                                                        #
                                          </th>
                                          <th
                                                        align="right"
                                                        className="sortBy "
                                                        onClick={[Function]}
                                          >
                                                        Product Name
                                          </th>
                                          <th
                                                        align="right"
                                                        className="sortBy "
                                                        onClick={[Function]}
                                          >
                                                        Price
                                          </th>
                                          <th
                                                        className="sortBy "
                                                        onClick={[Function]}
                                          >
                                                        Amount
                                          </th>
                                          <th>
                                                        Delete item
                                          </th>
                            </tr>
              </thead>
              <tbody>
                            
              </tbody>
              <tfoot>
                            <tr>
                                          <td
                                                        align="right"
                                                        colSpan={2}
                                          >
                                                        <strong>
                                                                      Total:
                                                        </strong>
                                          </td>
                                          <td
                                                        align="right"
                                          >
                                                        <strong>
                                                                      $ 0
                                                        </strong>
                                          </td>
                            </tr>
              </tfoot>
</table>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div
              class="flexBlock appHeader"
>
              <h2>
                            My cool cart
              </h2>
              <div>
                            <button
                                          class="generateCart"
                            >
                                          Generate random cart content
                            </button>
                            <button
                                          class="addItem"
                            >
                                          + Add item
                            </button>
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  My cool cart
</h2>,
                <div>
                  <button
                                    className="generateCart"
                                    onClick={[Function]}
                  >
                                    Generate random cart content
                  </button>
                  <button
                                    className="addItem"
                                    onClick={[Function]}
                  >
                                    + Add item
                  </button>
</div>,
              ],
              "className": "flexBlock appHeader",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h2>
                  My cool cart
</h2>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "My cool cart",
                },
                "ref": null,
                "rendered": Array [
                  "My cool cart",
                ],
                "type": "h2",
              },
              Object {
                "instance": <div>
                  <button
                                    class="generateCart"
                  >
                                    Generate random cart content
                  </button>
                  <button
                                    class="addItem"
                  >
                                    + Add item
                  </button>
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      className="generateCart"
                      onClick={[Function]}
>
                      Generate random cart content
</button>,
                    <button
                      className="addItem"
                      onClick={[Function]}
>
                      + Add item
</button>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <button
                      class="generateCart"
>
                      Generate random cart content
</button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Generate random cart content",
                      "className": "generateCart",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Generate random cart content",
                    ],
                    "type": "button",
                  },
                  Object {
                    "instance": <button
                      class="addItem"
>
                      + Add item
</button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "+ Add item",
                      "className": "addItem",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      "+ Add item",
                    ],
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <table
              width="100%"
>
              <thead>
                            <tr>
                                          <th>
                                                        #
                                          </th>
                                          <th
                                                        align="right"
                                                        class="sortBy "
                                          >
                                                        Product Name
                                          </th>
                                          <th
                                                        align="right"
                                                        class="sortBy "
                                          >
                                                        Price
                                          </th>
                                          <th
                                                        class="sortBy "
                                          >
                                                        Amount
                                          </th>
                                          <th>
                                                        Delete item
                                          </th>
                            </tr>
              </thead>
              <tbody />
              <tfoot>
                            <tr>
                                          <td
                                                        colspan="2"
                                                        align="right"
                                          >
                                                        <strong>
                                                                      Total:
                                                        </strong>
                                          </td>
                                          <td
                                                        align="right"
                                          >
                                                        <strong>
                                                                      $ 0
                                                        </strong>
                                          </td>
                            </tr>
              </tfoot>
</table>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <thead>
                  <tr>
                                    <th>
                                                      #
                                    </th>
                                    <th
                                                      align="right"
                                                      className="sortBy "
                                                      onClick={[Function]}
                                    >
                                                      Product Name
                                    </th>
                                    <th
                                                      align="right"
                                                      className="sortBy "
                                                      onClick={[Function]}
                                    >
                                                      Price
                                    </th>
                                    <th
                                                      className="sortBy "
                                                      onClick={[Function]}
                                    >
                                                      Amount
                                    </th>
                                    <th>
                                                      Delete item
                                    </th>
                  </tr>
</thead>,
                <tbody>
                  
</tbody>,
                <tfoot>
                  <tr>
                                    <td
                                                      align="right"
                                                      colSpan={2}
                                    >
                                                      <strong>
                                                                        Total:
                                                      </strong>
                                    </td>
                                    <td
                                                      align="right"
                                    >
                                                      <strong>
                                                                        $ 0
                                                      </strong>
                                    </td>
                  </tr>
</tfoot>,
              ],
              "width": "100%",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <thead>
                  <tr>
                                    <th>
                                                      #
                                    </th>
                                    <th
                                                      align="right"
                                                      class="sortBy "
                                    >
                                                      Product Name
                                    </th>
                                    <th
                                                      align="right"
                                                      class="sortBy "
                                    >
                                                      Price
                                    </th>
                                    <th
                                                      class="sortBy "
                                    >
                                                      Amount
                                    </th>
                                    <th>
                                                      Delete item
                                    </th>
                  </tr>
</thead>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <th>
                                        #
                    </th>
                    <th
                                        align="right"
                                        className="sortBy "
                                        onClick={[Function]}
                    >
                                        Product Name
                    </th>
                    <th
                                        align="right"
                                        className="sortBy "
                                        onClick={[Function]}
                    >
                                        Price
                    </th>
                    <th
                                        className="sortBy "
                                        onClick={[Function]}
                    >
                                        Amount
                    </th>
                    <th>
                                        Delete item
                    </th>
</tr>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <tr>
                      <th>
                                            #
                      </th>
                      <th
                                            align="right"
                                            class="sortBy "
                      >
                                            Product Name
                      </th>
                      <th
                                            align="right"
                                            class="sortBy "
                      >
                                            Price
                      </th>
                      <th
                                            class="sortBy "
                      >
                                            Amount
                      </th>
                      <th>
                                            Delete item
                      </th>
</tr>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <th>
                          #
</th>,
                        <th
                          align="right"
                          className="sortBy "
                          onClick={[Function]}
>
                          Product Name
</th>,
                        <th
                          align="right"
                          className="sortBy "
                          onClick={[Function]}
>
                          Price
</th>,
                        <th
                          className="sortBy "
                          onClick={[Function]}
>
                          Amount
</th>,
                        <th>
                          Delete item
</th>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <th>
                          #
</th>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "#",
                        },
                        "ref": null,
                        "rendered": Array [
                          "#",
                        ],
                        "type": "th",
                      },
                      Object {
                        "instance": <th
                          align="right"
                          class="sortBy "
>
                          Product Name
</th>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "align": "right",
                          "children": "Product Name",
                          "className": "sortBy ",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Product Name",
                        ],
                        "type": "th",
                      },
                      Object {
                        "instance": <th
                          align="right"
                          class="sortBy "
>
                          Price
</th>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "align": "right",
                          "children": "Price",
                          "className": "sortBy ",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Price",
                        ],
                        "type": "th",
                      },
                      Object {
                        "instance": <th
                          class="sortBy "
>
                          Amount
</th>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Amount",
                          "className": "sortBy ",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Amount",
                        ],
                        "type": "th",
                      },
                      Object {
                        "instance": <th>
                          Delete item
</th>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Delete item",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Delete item",
                        ],
                        "type": "th",
                      },
                    ],
                    "type": "tr",
                  },
                ],
                "type": "thead",
              },
              Object {
                "instance": <tbody />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [
                  Array [],
                ],
                "type": "tbody",
              },
              Object {
                "instance": <tfoot>
                  <tr>
                                    <td
                                                      colspan="2"
                                                      align="right"
                                    >
                                                      <strong>
                                                                        Total:
                                                      </strong>
                                    </td>
                                    <td
                                                      align="right"
                                    >
                                                      <strong>
                                                                        $ 0
                                                      </strong>
                                    </td>
                  </tr>
</tfoot>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <td
                                        align="right"
                                        colSpan={2}
                    >
                                        <strong>
                                                            Total:
                                        </strong>
                    </td>
                    <td
                                        align="right"
                    >
                                        <strong>
                                                            $ 0
                                        </strong>
                    </td>
</tr>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <tr>
                      <td
                                            colspan="2"
                                            align="right"
                      >
                                            <strong>
                                                                  Total:
                                            </strong>
                      </td>
                      <td
                                            align="right"
                      >
                                            <strong>
                                                                  $ 0
                                            </strong>
                      </td>
</tr>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <td
                          align="right"
                          colSpan={2}
>
                          <strong>
                                                    Total:
                          </strong>
</td>,
                        <td
                          align="right"
>
                          <strong>
                                                    $ 0
                          </strong>
</td>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <td
                          colspan="2"
                          align="right"
>
                          <strong>
                                                    Total:
                          </strong>
</td>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "align": "right",
                          "children": <strong>
                            Total:
</strong>,
                          "colSpan": 2,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <strong>
                              Total:
</strong>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Total:",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Total:",
                            ],
                            "type": "strong",
                          },
                        ],
                        "type": "td",
                      },
                      Object {
                        "instance": <td
                          align="right"
>
                          <strong>
                                                    $ 0
                          </strong>
</td>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "align": "right",
                          "children": <strong>
                            $ 0
</strong>,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <strong>
                              $ 0
</strong>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "$ 0",
                            },
                            "ref": null,
                            "rendered": Array [
                              "$ 0",
                            ],
                            "type": "strong",
                          },
                        ],
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                ],
                "type": "tfoot",
              },
            ],
            "type": "table",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Connect {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "storeSubscription": undefined,
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            class="flexBlock appHeader"
                                        >
                                                            <h2>
                                                                                My cool cart
                                                            </h2>
                                                            <div>
                                                                                <button
                                                                                                    class="generateCart"
                                                                                >
                                                                                                    Generate random cart content
                                                                                </button>
                                                                                <button
                                                                                                    class="addItem"
                                                                                >
                                                                                                    + Add item
                                                                                </button>
                                                            </div>
                                        </div>
                                        <table
                                                            width="100%"
                                        >
                                                            <thead>
                                                                                <tr>
                                                                                                    <th>
                                                                                                                        #
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        align="right"
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Product Name
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        align="right"
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Price
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Amount
                                                                                                    </th>
                                                                                                    <th>
                                                                                                                        Delete item
                                                                                                    </th>
                                                                                </tr>
                                                            </thead>
                                                            <tbody />
                                                            <tfoot>
                                                                                <tr>
                                                                                                    <td
                                                                                                                        colspan="2"
                                                                                                                        align="right"
                                                                                                    >
                                                                                                                        <strong>
                                                                                                                                            Total:
                                                                                                                        </strong>
                                                                                                    </td>
                                                                                                    <td
                                                                                                                        align="right"
                                                                                                    >
                                                                                                                        <strong>
                                                                                                                                            $ 0
                                                                                                                        </strong>
                                                                                                    </td>
                                                                                </tr>
                                                            </tfoot>
                                        </table>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "store": Object {
                                                                          "clearActions": [Function],
                                                                          "dispatch": [Function],
                                                                          "getActions": [Function],
                                                                          "getState": [Function],
                                                                          "replaceReducer": [Function],
                                                                          "subscribe": [Function],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "store": Object {
                                                                          "clearActions": [Function],
                                                                          "dispatch": [Function],
                                                                          "getActions": [Function],
                                                                          "getState": [Function],
                                                                          "replaceReducer": [Function],
                                                                          "subscribe": [Function],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "store": Object {
                                                        "clearActions": [Function],
                                                        "dispatch": [Function],
                                                        "getActions": [Function],
                                                        "getState": [Function],
                                                        "replaceReducer": [Function],
                                                        "subscribe": [Function],
                                                      },
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="flexBlock appHeader"
                                    >
                                                      <h2>
                                                                        My cool cart
                                                      </h2>
                                                      <div>
                                                                        <button
                                                                                          class="generateCart"
                                                                        >
                                                                                          Generate random cart content
                                                                        </button>
                                                                        <button
                                                                                          class="addItem"
                                                                        >
                                                                                          + Add item
                                                                        </button>
                                                      </div>
                                    </div>
                                    <table
                                                      width="100%"
                                    >
                                                      <thead>
                                                                        <tr>
                                                                                          <th>
                                                                                                            #
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Product Name
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Price
                                                                                          </th>
                                                                                          <th
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Amount
                                                                                          </th>
                                                                                          <th>
                                                                                                            Delete item
                                                                                          </th>
                                                                        </tr>
                                                      </thead>
                                                      <tbody />
                                                      <tfoot>
                                                                        <tr>
                                                                                          <td
                                                                                                            colspan="2"
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              Total:
                                                                                                            </strong>
                                                                                          </td>
                                                                                          <td
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              $ 0
                                                                                                            </strong>
                                                                                          </td>
                                                                        </tr>
                                                      </tfoot>
                                    </table>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                "lineNumber": 43,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                  "lineNumber": 44,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                    "lineNumber": 45,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "My cool cart",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                      "lineNumber": 46,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 11,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 47,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Generate random cart content",
                        "className": "generateCart",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 12,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                          "lineNumber": 50,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "+ Add item",
                          "className": "addItem",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <button
                          class="addItem"
>
                          + Add item
</button>,
                        "tag": 5,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "stateNode": <button
                        class="generateCart"
>
                        Generate random cart content
</button>,
                      "tag": 5,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <button
                          className="generateCart"
                          onClick={[Function]}
>
                          Generate random cart content
</button>,
                        <button
                          className="addItem"
                          onClick={[Function]}
>
                          + Add item
</button>,
                      ],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <div>
                      <button
                                            class="generateCart"
                      >
                                            Generate random cart content
                      </button>
                      <button
                                            class="addItem"
                      >
                                            + Add item
                      </button>
</div>,
                    "tag": 5,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <h2>
                    My cool cart
</h2>,
                  "tag": 5,
                  "type": "h2",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h2>
                      My cool cart
</h2>,
                    <div>
                      <button
                                            className="generateCart"
                                            onClick={[Function]}
                      >
                                            Generate random cart content
                      </button>
                      <button
                                            className="addItem"
                                            onClick={[Function]}
                      >
                                            + Add item
                      </button>
</div>,
                  ],
                  "className": "flexBlock appHeader",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                    "lineNumber": 55,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                      "lineNumber": 56,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 57,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 17,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                          "lineNumber": 58,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "#",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 18,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                            "lineNumber": 59,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "align": "right",
                            "children": "Product Name",
                            "className": "sortBy ",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": FiberNode {
                            "_debugID": 19,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                              "lineNumber": 70,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "align": "right",
                              "children": "Price",
                              "className": "sortBy ",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 20,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                "lineNumber": 81,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 3,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Amount",
                                "className": "sortBy ",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": FiberNode {
                                "_debugID": 21,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                  "lineNumber": 91,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 4,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Delete item",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <th>
                                  Delete item
</th>,
                                "tag": 5,
                                "type": "th",
                                "updateQueue": null,
                              },
                              "stateNode": <th
                                class="sortBy "
>
                                Amount
</th>,
                              "tag": 5,
                              "type": "th",
                              "updateQueue": null,
                            },
                            "stateNode": <th
                              align="right"
                              class="sortBy "
>
                              Price
</th>,
                            "tag": 5,
                            "type": "th",
                            "updateQueue": null,
                          },
                          "stateNode": <th
                            align="right"
                            class="sortBy "
>
                            Product Name
</th>,
                          "tag": 5,
                          "type": "th",
                          "updateQueue": null,
                        },
                        "stateNode": <th>
                          #
</th>,
                        "tag": 5,
                        "type": "th",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <th>
                            #
</th>,
                          <th
                            align="right"
                            className="sortBy "
                            onClick={[Function]}
>
                            Product Name
</th>,
                          <th
                            align="right"
                            className="sortBy "
                            onClick={[Function]}
>
                            Price
</th>,
                          <th
                            className="sortBy "
                            onClick={[Function]}
>
                            Amount
</th>,
                          <th>
                            Delete item
</th>,
                        ],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <tr>
                        <th>
                                                #
                        </th>
                        <th
                                                align="right"
                                                class="sortBy "
                        >
                                                Product Name
                        </th>
                        <th
                                                align="right"
                                                class="sortBy "
                        >
                                                Price
                        </th>
                        <th
                                                class="sortBy "
                        >
                                                Amount
                        </th>
                        <th>
                                                Delete item
                        </th>
</tr>,
                      "tag": 5,
                      "type": "tr",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <tr>
                        <th>
                                                #
                        </th>
                        <th
                                                align="right"
                                                className="sortBy "
                                                onClick={[Function]}
                        >
                                                Product Name
                        </th>
                        <th
                                                align="right"
                                                className="sortBy "
                                                onClick={[Function]}
                        >
                                                Price
                        </th>
                        <th
                                                className="sortBy "
                                                onClick={[Function]}
                        >
                                                Amount
                        </th>
                        <th>
                                                Delete item
                        </th>
</tr>,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 14,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                        "lineNumber": 94,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 15,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                          "lineNumber": 105,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 22,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                            "lineNumber": 106,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 23,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                              "lineNumber": 107,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 25,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                "lineNumber": 108,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Total:",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <strong>
                                Total:
</strong>,
                              "tag": 5,
                              "type": "strong",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "align": "right",
                              "children": <strong>
                                Total:
</strong>,
                              "colSpan": 2,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": FiberNode {
                              "_debugID": 24,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                "lineNumber": 110,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 26,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/evgeniy/projects/exness/cart/src/components/cart.js",
                                  "lineNumber": 111,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "$ 0",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <strong>
                                  $ 0
</strong>,
                                "tag": 5,
                                "type": "strong",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "align": "right",
                                "children": <strong>
                                  $ 0
</strong>,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <td
                                align="right"
>
                                <strong>
                                                                $ 0
                                </strong>
</td>,
                              "tag": 5,
                              "type": "td",
                              "updateQueue": null,
                            },
                            "stateNode": <td
                              colspan="2"
                              align="right"
>
                              <strong>
                                                            Total:
                              </strong>
</td>,
                            "tag": 5,
                            "type": "td",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <td
                                align="right"
                                colSpan={2}
>
                                <strong>
                                                                Total:
                                </strong>
</td>,
                              <td
                                align="right"
>
                                <strong>
                                                                $ 0
                                </strong>
</td>,
                            ],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <tr>
                            <td
                                                        colspan="2"
                                                        align="right"
                            >
                                                        <strong>
                                                                                    Total:
                                                        </strong>
                            </td>
                            <td
                                                        align="right"
                            >
                                                        <strong>
                                                                                    $ 0
                                                        </strong>
                            </td>
</tr>,
                          "tag": 5,
                          "type": "tr",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <tr>
                            <td
                                                        align="right"
                                                        colSpan={2}
                            >
                                                        <strong>
                                                                                    Total:
                                                        </strong>
                            </td>
                            <td
                                                        align="right"
                            >
                                                        <strong>
                                                                                    $ 0
                                                        </strong>
                            </td>
</tr>,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <tfoot>
                          <tr>
                                                    <td
                                                                              colspan="2"
                                                                              align="right"
                                                    >
                                                                              <strong>
                                                                                                        Total:
                                                                              </strong>
                                                    </td>
                                                    <td
                                                                              align="right"
                                                    >
                                                                              <strong>
                                                                                                        $ 0
                                                                              </strong>
                                                    </td>
                          </tr>
</tfoot>,
                        "tag": 5,
                        "type": "tfoot",
                        "updateQueue": null,
                      },
                      "stateNode": <tbody />,
                      "tag": 5,
                      "type": "tbody",
                      "updateQueue": null,
                    },
                    "stateNode": <thead>
                      <tr>
                                            <th>
                                                                  #
                                            </th>
                                            <th
                                                                  align="right"
                                                                  class="sortBy "
                                            >
                                                                  Product Name
                                            </th>
                                            <th
                                                                  align="right"
                                                                  class="sortBy "
                                            >
                                                                  Price
                                            </th>
                                            <th
                                                                  class="sortBy "
                                            >
                                                                  Amount
                                            </th>
                                            <th>
                                                                  Delete item
                                            </th>
                      </tr>
</thead>,
                    "tag": 5,
                    "type": "thead",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <thead>
                        <tr>
                                                <th>
                                                                        #
                                                </th>
                                                <th
                                                                        align="right"
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                >
                                                                        Product Name
                                                </th>
                                                <th
                                                                        align="right"
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                >
                                                                        Price
                                                </th>
                                                <th
                                                                        className="sortBy "
                                                                        onClick={[Function]}
                                                >
                                                                        Amount
                                                </th>
                                                <th>
                                                                        Delete item
                                                </th>
                        </tr>
</thead>,
                      <tbody>
                        
</tbody>,
                      <tfoot>
                        <tr>
                                                <td
                                                                        align="right"
                                                                        colSpan={2}
                                                >
                                                                        <strong>
                                                                                                Total:
                                                                        </strong>
                                                </td>
                                                <td
                                                                        align="right"
                                                >
                                                                        <strong>
                                                                                                $ 0
                                                                        </strong>
                                                </td>
                        </tr>
</tfoot>,
                    ],
                    "width": "100%",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <table
                    width="100%"
>
                    <thead>
                                        <tr>
                                                            <th>
                                                                                #
                                                            </th>
                                                            <th
                                                                                align="right"
                                                                                class="sortBy "
                                                            >
                                                                                Product Name
                                                            </th>
                                                            <th
                                                                                align="right"
                                                                                class="sortBy "
                                                            >
                                                                                Price
                                                            </th>
                                                            <th
                                                                                class="sortBy "
                                                            >
                                                                                Amount
                                                            </th>
                                                            <th>
                                                                                Delete item
                                                            </th>
                                        </tr>
                    </thead>
                    <tbody />
                    <tfoot>
                                        <tr>
                                                            <td
                                                                                colspan="2"
                                                                                align="right"
                                                            >
                                                                                <strong>
                                                                                                    Total:
                                                                                </strong>
                                                            </td>
                                                            <td
                                                                                align="right"
                                                            >
                                                                                <strong>
                                                                                                    $ 0
                                                                                </strong>
                                                            </td>
                                        </tr>
                    </tfoot>
</table>,
                  "tag": 5,
                  "type": "table",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="flexBlock appHeader"
>
                  <h2>
                                    My cool cart
                  </h2>
                  <div>
                                    <button
                                                      class="generateCart"
                                    >
                                                      Generate random cart content
                                    </button>
                                    <button
                                                      class="addItem"
                                    >
                                                      + Add item
                                    </button>
                  </div>
</div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="flexBlock appHeader"
>
                    <h2>
                                        My cool cart
                    </h2>
                    <div>
                                        <button
                                                            className="generateCart"
                                                            onClick={[Function]}
                                        >
                                                            Generate random cart content
                                        </button>
                                        <button
                                                            className="addItem"
                                                            onClick={[Function]}
                                        >
                                                            + Add item
                                        </button>
                    </div>
</div>,
                  <table
                    width="100%"
>
                    <thead>
                                        <tr>
                                                            <th>
                                                                                #
                                                            </th>
                                                            <th
                                                                                align="right"
                                                                                className="sortBy "
                                                                                onClick={[Function]}
                                                            >
                                                                                Product Name
                                                            </th>
                                                            <th
                                                                                align="right"
                                                                                className="sortBy "
                                                                                onClick={[Function]}
                                                            >
                                                                                Price
                                                            </th>
                                                            <th
                                                                                className="sortBy "
                                                                                onClick={[Function]}
                                                            >
                                                                                Amount
                                                            </th>
                                                            <th>
                                                                                Delete item
                                                            </th>
                                        </tr>
                    </thead>
                    <tbody>
                                        
                    </tbody>
                    <tfoot>
                                        <tr>
                                                            <td
                                                                                align="right"
                                                                                colSpan={2}
                                                            >
                                                                                <strong>
                                                                                                    Total:
                                                                                </strong>
                                                            </td>
                                                            <td
                                                                                align="right"
                                                            >
                                                                                <strong>
                                                                                                    $ 0
                                                                                </strong>
                                                            </td>
                                        </tr>
                    </tfoot>
</table>,
                ],
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": <div>
                <div
                                class="flexBlock appHeader"
                >
                                <h2>
                                                My cool cart
                                </h2>
                                <div>
                                                <button
                                                                class="generateCart"
                                                >
                                                                Generate random cart content
                                                </button>
                                                <button
                                                                class="addItem"
                                                >
                                                                + Add item
                                                </button>
                                </div>
                </div>
                <table
                                width="100%"
                >
                                <thead>
                                                <tr>
                                                                <th>
                                                                                #
                                                                </th>
                                                                <th
                                                                                align="right"
                                                                                class="sortBy "
                                                                >
                                                                                Product Name
                                                                </th>
                                                                <th
                                                                                align="right"
                                                                                class="sortBy "
                                                                >
                                                                                Price
                                                                </th>
                                                                <th
                                                                                class="sortBy "
                                                                >
                                                                                Amount
                                                                </th>
                                                                <th>
                                                                                Delete item
                                                                </th>
                                                </tr>
                                </thead>
                                <tbody />
                                <tfoot>
                                                <tr>
                                                                <td
                                                                                colspan="2"
                                                                                align="right"
                                                                >
                                                                                <strong>
                                                                                                Total:
                                                                                </strong>
                                                                </td>
                                                                <td
                                                                                align="right"
                                                                >
                                                                                <strong>
                                                                                                $ 0
                                                                                </strong>
                                                                </td>
                                                </tr>
                                </tfoot>
                </table>
</div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "addItem": [Function],
              "changeAmount": [Function],
              "fillCart": [Function],
              "items": Array [],
              "removeItem": [Function],
              "sortColumn": undefined,
              "sortDirection": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "toggleSorting": [Function],
              "total": 0,
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
          },
          "memoizedState": Object {},
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": FiberNode {
            "_debugID": 3,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "internalContextTag": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                                        <div
                                                            class="flexBlock appHeader"
                                        >
                                                            <h2>
                                                                                My cool cart
                                                            </h2>
                                                            <div>
                                                                                <button
                                                                                                    class="generateCart"
                                                                                >
                                                                                                    Generate random cart content
                                                                                </button>
                                                                                <button
                                                                                                    class="addItem"
                                                                                >
                                                                                                    + Add item
                                                                                </button>
                                                            </div>
                                        </div>
                                        <table
                                                            width="100%"
                                        >
                                                            <thead>
                                                                                <tr>
                                                                                                    <th>
                                                                                                                        #
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        align="right"
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Product Name
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        align="right"
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Price
                                                                                                    </th>
                                                                                                    <th
                                                                                                                        class="sortBy "
                                                                                                    >
                                                                                                                        Amount
                                                                                                    </th>
                                                                                                    <th>
                                                                                                                        Delete item
                                                                                                    </th>
                                                                                </tr>
                                                            </thead>
                                                            <tbody />
                                                            <tfoot>
                                                                                <tr>
                                                                                                    <td
                                                                                                                        colspan="2"
                                                                                                                        align="right"
                                                                                                    >
                                                                                                                        <strong>
                                                                                                                                            Total:
                                                                                                                        </strong>
                                                                                                    </td>
                                                                                                    <td
                                                                                                                        align="right"
                                                                                                    >
                                                                                                                        <strong>
                                                                                                                                            $ 0
                                                                                                                        </strong>
                                                                                                    </td>
                                                                                </tr>
                                                            </tfoot>
                                        </table>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "hydrate": false,
                  "isReadyForCommit": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "store": Object {
                                                                          "clearActions": [Function],
                                                                          "dispatch": [Function],
                                                                          "getActions": [Function],
                                                                          "getState": [Function],
                                                                          "replaceReducer": [Function],
                                                                          "subscribe": [Function],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "nextCallback": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "store": Object {
                                                                          "clearActions": [Function],
                                                                          "dispatch": [Function],
                                                                          "getActions": [Function],
                                                                          "getState": [Function],
                                                                          "replaceReducer": [Function],
                                                                          "subscribe": [Function],
                                                                        },
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "store": Object {
                                                        "clearActions": [Function],
                                                        "dispatch": [Function],
                                                        "getActions": [Function],
                                                        "getState": [Function],
                                                        "replaceReducer": [Function],
                                                        "subscribe": [Function],
                                                      },
                                                    }
                  }
/>,
              },
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                                    <div
                                                      class="flexBlock appHeader"
                                    >
                                                      <h2>
                                                                        My cool cart
                                                      </h2>
                                                      <div>
                                                                        <button
                                                                                          class="generateCart"
                                                                        >
                                                                                          Generate random cart content
                                                                        </button>
                                                                        <button
                                                                                          class="addItem"
                                                                        >
                                                                                          + Add item
                                                                        </button>
                                                      </div>
                                    </div>
                                    <table
                                                      width="100%"
                                    >
                                                      <thead>
                                                                        <tr>
                                                                                          <th>
                                                                                                            #
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Product Name
                                                                                          </th>
                                                                                          <th
                                                                                                            align="right"
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Price
                                                                                          </th>
                                                                                          <th
                                                                                                            class="sortBy "
                                                                                          >
                                                                                                            Amount
                                                                                          </th>
                                                                                          <th>
                                                                                                            Delete item
                                                                                          </th>
                                                                        </tr>
                                                      </thead>
                                                      <tbody />
                                                      <tfoot>
                                                                        <tr>
                                                                                          <td
                                                                                                            colspan="2"
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              Total:
                                                                                                            </strong>
                                                                                          </td>
                                                                                          <td
                                                                                                            align="right"
                                                                                          >
                                                                                                            <strong>
                                                                                                                              $ 0
                                                                                                            </strong>
                                                                                          </td>
                                                                        </tr>
                                                      </tfoot>
                                    </table>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "hydrate": false,
                "isReadyForCommit": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "notifyNestedSubs": [Function],
        "props": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "propsMode": true,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "addItem": [Function],
            "changeAmount": [Function],
            "fillCart": [Function],
            "items": Array [],
            "removeItem": [Function],
            "sortColumn": undefined,
            "sortDirection": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "toggleSorting": [Function],
            "total": 0,
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "subscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
        "version": 0,
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addItem": [Function],
          "changeAmount": [Function],
          "fillCart": [Function],
          "items": Array [],
          "removeItem": [Function],
          "sortColumn": undefined,
          "sortDirection": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          },
          "toggleSorting": [Function],
          "total": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": <div>
            <div
                        class="flexBlock appHeader"
            >
                        <h2>
                                    My cool cart
                        </h2>
                        <div>
                                    <button
                                                class="generateCart"
                                    >
                                                Generate random cart content
                                    </button>
                                    <button
                                                class="addItem"
                                    >
                                                + Add item
                                    </button>
                        </div>
            </div>
            <table
                        width="100%"
            >
                        <thead>
                                    <tr>
                                                <th>
                                                            #
                                                </th>
                                                <th
                                                            align="right"
                                                            class="sortBy "
                                                >
                                                            Product Name
                                                </th>
                                                <th
                                                            align="right"
                                                            class="sortBy "
                                                >
                                                            Price
                                                </th>
                                                <th
                                                            class="sortBy "
                                                >
                                                            Amount
                                                </th>
                                                <th>
                                                            Delete item
                                                </th>
                                    </tr>
                        </thead>
                        <tbody />
                        <tfoot>
                                    <tr>
                                                <td
                                                            colspan="2"
                                                            align="right"
                                                >
                                                            <strong>
                                                                        Total:
                                                            </strong>
                                                </td>
                                                <td
                                                            align="right"
                                                >
                                                            <strong>
                                                                        $ 0
                                                            </strong>
                                                </td>
                                    </tr>
                        </tfoot>
            </table>
</div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="flexBlock appHeader"
>
                <h2>
                                My cool cart
                </h2>
                <div>
                                <button
                                                className="generateCart"
                                                onClick={[Function]}
                                >
                                                Generate random cart content
                                </button>
                                <button
                                                className="addItem"
                                                onClick={[Function]}
                                >
                                                + Add item
                                </button>
                </div>
</div>,
              <table
                width="100%"
>
                <thead>
                                <tr>
                                                <th>
                                                                #
                                                </th>
                                                <th
                                                                align="right"
                                                                className="sortBy "
                                                                onClick={[Function]}
                                                >
                                                                Product Name
                                                </th>
                                                <th
                                                                align="right"
                                                                className="sortBy "
                                                                onClick={[Function]}
                                                >
                                                                Price
                                                </th>
                                                <th
                                                                className="sortBy "
                                                                onClick={[Function]}
                                                >
                                                                Amount
                                                </th>
                                                <th>
                                                                Delete item
                                                </th>
                                </tr>
                </thead>
                <tbody>
                                
                </tbody>
                <tfoot>
                                <tr>
                                                <td
                                                                align="right"
                                                                colSpan={2}
                                                >
                                                                <strong>
                                                                                Total:
                                                                </strong>
                                                </td>
                                                <td
                                                                align="right"
                                                >
                                                                <strong>
                                                                                $ 0
                                                                </strong>
                                                </td>
                                </tr>
                </tfoot>
</table>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="flexBlock appHeader"
>
                <h2>
                                My cool cart
                </h2>
                <div>
                                <button
                                                class="generateCart"
                                >
                                                Generate random cart content
                                </button>
                                <button
                                                class="addItem"
                                >
                                                + Add item
                                </button>
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    My cool cart
</h2>,
                  <div>
                    <button
                                        className="generateCart"
                                        onClick={[Function]}
                    >
                                        Generate random cart content
                    </button>
                    <button
                                        className="addItem"
                                        onClick={[Function]}
                    >
                                        + Add item
                    </button>
</div>,
                ],
                "className": "flexBlock appHeader",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h2>
                    My cool cart
</h2>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "My cool cart",
                  },
                  "ref": null,
                  "rendered": Array [
                    "My cool cart",
                  ],
                  "type": "h2",
                },
                Object {
                  "instance": <div>
                    <button
                                        class="generateCart"
                    >
                                        Generate random cart content
                    </button>
                    <button
                                        class="addItem"
                    >
                                        + Add item
                    </button>
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <button
                        className="generateCart"
                        onClick={[Function]}
>
                        Generate random cart content
</button>,
                      <button
                        className="addItem"
                        onClick={[Function]}
>
                        + Add item
</button>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <button
                        class="generateCart"
>
                        Generate random cart content
</button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Generate random cart content",
                        "className": "generateCart",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Generate random cart content",
                      ],
                      "type": "button",
                    },
                    Object {
                      "instance": <button
                        class="addItem"
>
                        + Add item
</button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "+ Add item",
                        "className": "addItem",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "+ Add item",
                      ],
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <table
                width="100%"
>
                <thead>
                                <tr>
                                                <th>
                                                                #
                                                </th>
                                                <th
                                                                align="right"
                                                                class="sortBy "
                                                >
                                                                Product Name
                                                </th>
                                                <th
                                                                align="right"
                                                                class="sortBy "
                                                >
                                                                Price
                                                </th>
                                                <th
                                                                class="sortBy "
                                                >
                                                                Amount
                                                </th>
                                                <th>
                                                                Delete item
                                                </th>
                                </tr>
                </thead>
                <tbody />
                <tfoot>
                                <tr>
                                                <td
                                                                colspan="2"
                                                                align="right"
                                                >
                                                                <strong>
                                                                                Total:
                                                                </strong>
                                                </td>
                                                <td
                                                                align="right"
                                                >
                                                                <strong>
                                                                                $ 0
                                                                </strong>
                                                </td>
                                </tr>
                </tfoot>
</table>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead>
                    <tr>
                                        <th>
                                                            #
                                        </th>
                                        <th
                                                            align="right"
                                                            className="sortBy "
                                                            onClick={[Function]}
                                        >
                                                            Product Name
                                        </th>
                                        <th
                                                            align="right"
                                                            className="sortBy "
                                                            onClick={[Function]}
                                        >
                                                            Price
                                        </th>
                                        <th
                                                            className="sortBy "
                                                            onClick={[Function]}
                                        >
                                                            Amount
                                        </th>
                                        <th>
                                                            Delete item
                                        </th>
                    </tr>
</thead>,
                  <tbody>
                    
</tbody>,
                  <tfoot>
                    <tr>
                                        <td
                                                            align="right"
                                                            colSpan={2}
                                        >
                                                            <strong>
                                                                                Total:
                                                            </strong>
                                        </td>
                                        <td
                                                            align="right"
                                        >
                                                            <strong>
                                                                                $ 0
                                                            </strong>
                                        </td>
                    </tr>
</tfoot>,
                ],
                "width": "100%",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <thead>
                    <tr>
                                        <th>
                                                            #
                                        </th>
                                        <th
                                                            align="right"
                                                            class="sortBy "
                                        >
                                                            Product Name
                                        </th>
                                        <th
                                                            align="right"
                                                            class="sortBy "
                                        >
                                                            Price
                                        </th>
                                        <th
                                                            class="sortBy "
                                        >
                                                            Amount
                                        </th>
                                        <th>
                                                            Delete item
                                        </th>
                    </tr>
</thead>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <th>
                                            #
                      </th>
                      <th
                                            align="right"
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Product Name
                      </th>
                      <th
                                            align="right"
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Price
                      </th>
                      <th
                                            className="sortBy "
                                            onClick={[Function]}
                      >
                                            Amount
                      </th>
                      <th>
                                            Delete item
                      </th>
</tr>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <tr>
                        <th>
                                                #
                        </th>
                        <th
                                                align="right"
                                                class="sortBy "
                        >
                                                Product Name
                        </th>
                        <th
                                                align="right"
                                                class="sortBy "
                        >
                                                Price
                        </th>
                        <th
                                                class="sortBy "
                        >
                                                Amount
                        </th>
                        <th>
                                                Delete item
                        </th>
</tr>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <th>
                            #
</th>,
                          <th
                            align="right"
                            className="sortBy "
                            onClick={[Function]}
>
                            Product Name
</th>,
                          <th
                            align="right"
                            className="sortBy "
                            onClick={[Function]}
>
                            Price
</th>,
                          <th
                            className="sortBy "
                            onClick={[Function]}
>
                            Amount
</th>,
                          <th>
                            Delete item
</th>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <th>
                            #
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "#",
                          },
                          "ref": null,
                          "rendered": Array [
                            "#",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            align="right"
                            class="sortBy "
>
                            Product Name
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "align": "right",
                            "children": "Product Name",
                            "className": "sortBy ",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Product Name",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            align="right"
                            class="sortBy "
>
                            Price
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "align": "right",
                            "children": "Price",
                            "className": "sortBy ",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Price",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th
                            class="sortBy "
>
                            Amount
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Amount",
                            "className": "sortBy ",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Amount",
                          ],
                          "type": "th",
                        },
                        Object {
                          "instance": <th>
                            Delete item
</th>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Delete item",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Delete item",
                          ],
                          "type": "th",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "thead",
                },
                Object {
                  "instance": <tbody />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [
                    Array [],
                  ],
                  "type": "tbody",
                },
                Object {
                  "instance": <tfoot>
                    <tr>
                                        <td
                                                            colspan="2"
                                                            align="right"
                                        >
                                                            <strong>
                                                                                Total:
                                                            </strong>
                                        </td>
                                        <td
                                                            align="right"
                                        >
                                                            <strong>
                                                                                $ 0
                                                            </strong>
                                        </td>
                    </tr>
</tfoot>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <td
                                            align="right"
                                            colSpan={2}
                      >
                                            <strong>
                                                                  Total:
                                            </strong>
                      </td>
                      <td
                                            align="right"
                      >
                                            <strong>
                                                                  $ 0
                                            </strong>
                      </td>
</tr>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <tr>
                        <td
                                                colspan="2"
                                                align="right"
                        >
                                                <strong>
                                                                        Total:
                                                </strong>
                        </td>
                        <td
                                                align="right"
                        >
                                                <strong>
                                                                        $ 0
                                                </strong>
                        </td>
</tr>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <td
                            align="right"
                            colSpan={2}
>
                            <strong>
                                                        Total:
                            </strong>
</td>,
                          <td
                            align="right"
>
                            <strong>
                                                        $ 0
                            </strong>
</td>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <td
                            colspan="2"
                            align="right"
>
                            <strong>
                                                        Total:
                            </strong>
</td>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "align": "right",
                            "children": <strong>
                              Total:
</strong>,
                            "colSpan": 2,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <strong>
                                Total:
</strong>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Total:",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Total:",
                              ],
                              "type": "strong",
                            },
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": <td
                            align="right"
>
                            <strong>
                                                        $ 0
                            </strong>
</td>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "align": "right",
                            "children": <strong>
                              $ 0
</strong>,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <strong>
                                $ 0
</strong>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "$ 0",
                              },
                              "ref": null,
                              "rendered": Array [
                                "$ 0",
                              ],
                              "type": "strong",
                            },
                          ],
                          "type": "td",
                        },
                      ],
                      "type": "tr",
                    },
                  ],
                  "type": "tfoot",
                },
              ],
              "type": "table",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
